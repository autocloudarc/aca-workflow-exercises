name: 06-level-workflow
on:
  push:
  workflow_dispatch:

jobs:
  list-contents:
    runs-on: ubuntu-latest
    environment: dev
    steps:
    - run: |
        echo "ðŸŽ‰ The job was triggered by event: ${{ github.event_name }}"
        echo "ðŸ”Ž The name of your branch is ${{ github.ref }} and your repository is ."
    
    - name: checkout-repository
      uses: actions/checkout@v4
    
    - name: list-contents-with-echo
      run: |
        echo "The repository ${{ github.repository }} contains the following files:"
        tree

    # Add a step to list the directory contents of the repository with a powershell script at src/scripts/Get-DirectoryContents.ps1 
    - name: list-contents-with-powershell-script
      uses: azure/powershell@v2
      with:
        inlineScript: |
          chmod +x src/scripts/Get-DirectoryContents.ps1
          src/scripts/Get-DirectoryContents.ps1
        azPSVersion: 'latest'

    # Add a step to list the directory contents of the repository with a powershell script at src/scripts/Get-DirectoryContents.ps1 
    - name: list-contents-with-powershell-inline
      uses: azure/powershell@v2
      with:
        inlineScript: |
          New-Item -Path artifacts -ItemType File -Name list-contents.txt -Force -Verbose
          Import-Csv -Path inputs/variables.csv -IgnoreHeader | Export-Csv -Path artifacts/variables-output.csv -NoTypeInformation -Verbose
          Get-ChildItem -Path . | Out-File -Path artifacts/list-contents.txt
        azPSVersion: 'latest'

    # List the directory contents of the repository using a python script at src/scripts/getDirectoryContents.py
    - name: list-contents-with-python
      run: python3 src/scripts/getDirectoryContents.py

    - name: upload-artifact
      uses: actions/upload-artifact@v4
      with:
        name: list-contents
        path: artifacts/**/*

  retrieve-values:
      runs-on: ubuntu-latest
      needs: list-contents
      environment: qua
      env:
        QUA_VARIABLE: ${{ vars.QUA_VARIABLE }}
        QUA_SECRET: ${{ secrets.QUA_SECRET }}
      steps:
      - name: retrieve-secrets
        run: echo "The value of the secret is ${{ env.QUA_SECRET }}"
      
      - name: retrieve-variables
        run: echo "The value of the variable is ${{ env.QUA_VARIABLE }}"

      - name: download-artifact
        uses: actions/download-artifact@v4
        with:
          name: list-contents
          path: downloads
      
      # Add a step to list the directory contents of the repository with a powershell script at src/scripts/Get-DirectoryContents.ps1 
      - name: show-contents-from-artifact
        uses: azure/powershell@v2
        with:
          inlineScript: | 
            Get-Content -Path downloads/list-contents.txt
            Import-Csv -Path downloads/variables-output.csv
          azPSVersion: 'latest'
